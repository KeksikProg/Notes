Тут будет руководство для nginx (восстоновленное)

Блоки кода, которые могут пригодится потом:
	location /static {
		alias /path/to/your/static/static; # Данное св-во работает примерно также как и root, то есть указываем путь к файлам через неё
		expires max;





sudo service nginx start/reload/restart/stop/status

Терминология, которая используется в конфигурации nginx
	(Файл конфигурации находится по пути /etc/nginx/nginx.conf, это общая конфа, а для отдельных сайтов по пути /etc/nginx/sites-aviable/)

	2 Основных термина в nginx это:
		1. Директива
		2. Контексты
		
		Директивы это конкретные области конфигурации, которые состоят из имени свойства и его значения
		Контексты это области конфигурации в которых хранятся директивы
		Пример:
			...
			http {
				include mime.types;
			}
			
			В данном примере Контекст это http и все что внутри фигурных скобок
			А директива это include mime.types; где include это свойство, а mime.types его значение 
		
		Так же в контекстах могут быть другие контексты, это называется вложенность контекстов
		Самым начальным контекстом является, как это не очевидно, сам файл, в нем настраиваются мастер контексты, такие как http
		Кстати, http это единственный контекст без которого сервер не может работать ни в каком случае
		
		Самой часто используемой директивой является location, тк с помощью неё настривается поведение сервера при запросе к какому-либо url
		Виды location:
			1. location /greet {...} - Мы можем написать так, это называется метод префиксов, он удобный, но если мы к примеру введем
				http://127.0.0.1/greetings/something, то это тоже будет считаться как вызов location greet
			2. location = /greet {...} - Это уже лучше, называется метод полного совпадения, то есть будет вызываться только когда мы вызываем 
				http://127.0.1/greet, и тд 
			3. А вот тут начинается самое интересное, это регулярные выражения nginx, то есть мы сами настраиваем 
				
				1. location ~ /greet [0-9] - '~' означает, что location будет чувствителен к регистру 
				(В данном случае location будет срабатывать только когда будет вызываться, к примеру http://127.0.0.1/greet123, то есть greet и число

				2. location ~* /greet [0-9] - то же самое выражение, что и выше, но уже не будет чувствителен к регистру

				3. location ^~ /greet [0-9] - То же самое выражение, что и выше ,но более приоритетное

			Таблица приоритета:
				1. = - Полное совпадение 
				2. ^~ - Префикс преимущества, это тоже самое регулярное выражение, но имеет почти тот же приоритет как и полное совпадение 
				3. *~ - Регулярные выражения 
				4. no modifer - совпадение префикса (как 1 пункт в видах location)
		
		Директивы location:
			try_files - нужен, чтобы location передавал файлы
